<!DOCTYPE html>
<html>
<head>
    <title>Driftctl scan report</title>
    <meta charset="utf-8">
    <style>[[.Stylesheet]]</style>
    <script>[[.VueScript]]</script>
</head>
<body>

<div id="app">
    <h1 class="heading title">Driftctl scan report</h1>
    <span class="heading subtitle">Coverage 8%</span>
    <span class="heading date">Apr 21, 2021</span>
    <hr>
    <form action="#">
        <input v-model="searchQuery" type="text" placeholder="Search resources...">
        <select v-model="resourceTypeQuery">
            <option value="">Resource type</option>
            <option v-for="type of getResourceTypes" :value="type">{{ type }}</option>
        </select>
    </form>

    <h2>Managed resources ({{Managed.length}})</h2>

    <div v-for="res of Managed">
        <p class="list-item resource-id">{{ res.id }}</p>
        <span class="list-item resource-type">{{ res.type }}</span>
    </div>
    <p v-if="!Managed.length">There's nothing to see there...</p>

    <h2>Unmanaged resources ({{Unmanaged.length}})</h2>

    <div v-for="res of Unmanaged">
        <p class="list-item resource-id">{{ res.id }}</p>
        <span class="list-item resource-type">{{ res.type }}</span>
    </div>
    <p v-if="!Unmanaged.length">There's nothing to see there...</p>

    <h2>Changed resources ({{Changed.length}})</h2>

    <div v-for="ch of Changed">
        <p class="list-item resource-id">{{ ch.res.id }}</p>
        <span class="list-item resource-type">{{ ch.res.type }}</span>
        <div v-for="diff of ch.changelog">
            <div>{{ formatDifference(diff) }}</div>
        </div>
    </div>
    <p v-if="!Changed.length">There's nothing to see there...</p>

    <h2>Missing resources ({{Missing.length}})</h2>

    <div v-for="res of Missing">
        <p class="list-item resource-id">{{ res.id }}</p>
        <span class="list-item resource-type">{{ res.type }}</span>
    </div>
    <p v-if="!Missing.length">There's nothing to see there...</p>

    <h2>Alerts ({{alerts.length}})</h2>

    <div v-for="alert of alerts">
        <p class="list-item resource-id">{{ alert.type }}</p>
        <div v-for="msg of alert.messages">
            <div>{{ msg }}</div>
        </div>
    </div>
    <p v-if="!alerts.length">There's nothing to see there...</p>
</div>
</body>
<script lang="js">
    Vue.createApp({
        data() {
            return {
                searchQuery: '',
                resourceTypeQuery: '',
                managed: [
                    [[range $res := .Managed]]
                    {
                        id: [[$res.TerraformId]],
                        type: [[$res.TerraformType]],
                    },
                    [[end]]
                ],
                unmanaged: [
                    [[range $res := .Unmanaged]]
                    {
                        id: [[$res.TerraformId]],
                        type: [[$res.TerraformType]],
                    },
                    [[end]]
                ],
                missing: [
                    [[range $res := .Deleted]]
                    {
                        id: [[$res.TerraformId]],
                        type: [[$res.TerraformType]],
                    },
                    [[end]]
                ],
                changed: [
                    [[range $ch := .Differences]]
                    {
                        res: {
                            id: [[$ch.Res.TerraformId]],
                            type: [[$ch.Res.TerraformType]],
                        },
                        changelog: [[$ch.Changelog]],
                    },
                    [[end]]
                ],
                alerts: [
                    [[range $type, $alerts := .Alerts]]
            {
                type: [[$type]],
                messages: [
                    [[range $alert := $alerts]] [[$alert.Message]] [[end]],
                ]
            },
                [[end]]
                ]
            }
        },
        computed: {
            Managed() {
                return this.filterResources(this.managed)
            },
            Unmanaged() {
                return this.filterResources(this.unmanaged)
            },
            Missing() {
                return this.filterResources(this.missing)
            },
            Changed() {
                return this.filterDifferences(this.changed)
            },
            getResourceTypes() {
                return [...this.managed, ...this.unmanaged, ...this.missing]
                    .map(res => res.type)
                    .filter((value, index, self) => self.indexOf(value) === index)
            }
        },
        methods: {
            matchSearch(str) {
                return str.toLowerCase().includes(this.searchQuery.toLowerCase())
            },
            filterResources(resources) {
                let result = resources.filter(res => this.matchSearch(res.id))

                if (this.resourceTypeQuery.length) {
                    result = result.filter(res => res.type === this.resourceTypeQuery)
                }

                return result
            },
            filterDifferences(diffs) {
                let result = diffs.filter(d => this.matchSearch(d.res.id))

                if (this.resourceTypeQuery.length) {
                    result = result.filter(d => d.res.type === this.resourceTypeQuery)
                }

                return result
            },
            formatDifference(diff) {
                let prefix = ""
                let suffix = ""

                switch (diff.type) {
                    case "create":
                        prefix = "+"
                    case "update":
                        prefix = "~"
                    case "delete":
                        prefix = "-"
                }

                if (diff.computed) {
                    suffix = "(computed)"
                }

                return `${prefix} ${diff.path.join('.')}: ${this.prettifyValue(diff.from)} => ${this.prettifyValue(diff.to)} ${suffix}`
            },
            prettifyValue(value) {
                return value
            }
        },
    }).mount('#app')
</script>
</html>