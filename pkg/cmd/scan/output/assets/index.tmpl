<!doctype html>
<html>
<head>
    <title>Driftctl scan report</title>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link rel="shortcut icon"
          href="https://raw.githubusercontent.com/cloudskiff/driftctl-docs/main/static/img/favicon.ico"/>
    <style>{{.Stylesheet}}</style>
</head>
<body>
<div class="container">
    <div class="heading d-flex justify-space-between align-center">
        <div>
            <h1 class="heading-title mb-1">Driftctl scan report</h1>
            <span class="heading-subtitle">Coverage {{.Coverage}}%</span>
        </div>
        <div class="text--right">
            <h2 class="heading-date mb-1">{{ .ScanDate }}</h2>
            <span class="heading-subtitle">Scan duration {{.ScanDuration}}</span>
        </div>
    </div>
    <div class="card d-flex justify-space-around mb-2 text--grey">
        <span>Total resources: {{.Summary.TotalResources}}</span>
        <span>Managed: {{rate .Summary.TotalManaged}}%</span>
        <span>Changed: {{.Summary.TotalDrifted}}/{{.Summary.TotalManaged}}</span>
        <span>Unmanaged: {{rate .Summary.TotalUnmanaged}}%</span>
        <span>Missing: {{rate .Summary.TotalDeleted}}%</span>
    </div>
    <div class="app-content">
        {{ if (lt .Coverage 100) }}
        <div class="d-flex justify-center mb-2">
            <form id="filter-form" action="#">
                <input type="text" name="resource-id-filter" placeholder="Search resources..." onkeyup="refreshState()">
                <select name="resource-type-filter" onchange="refreshState()">
                    <option value="">Resource type</option>
                    {{ range $type := getResourceTypes }}
                    <option value="{{$type}}">{{ $type }}</option>
                    {{end}}
                </select>
                <button type="button" onclick="resetFilters()" class="reset-filter-btn">Reset filters</button>
            </form>
        </div>

        <div class="tabs-wrapper">
            <input class="radio" id="one" name="group" type="radio" checked>
            <input class="radio" id="two" name="group" type="radio">
            <input class="radio" id="three" name="group" type="radio">
            <input class="radio" id="four" name="group" type="radio">
            <div class="tabs">
                {{ if (gt (len .Unmanaged) 0) }}
                <label class="tab" id="one-tab" for="one">Unmanaged resources (<span
                        class="resource-count-unmanaged">{{len .Unmanaged}}</span>)</label>
                {{end}}
                {{ if (gt (len .Differences) 0) }}
                <label class="tab" id="two-tab" for="two">Changed resources (<span
                        class="resource-count-changed">{{len .Differences}}</span>)</label>
                {{end}}
                {{ if (gt (len .Deleted) 0) }}
                <label class="tab" id="three-tab" for="three">Missing resources (<span
                        class="resource-count-deleted">{{len .Deleted}}</span>)</label>
                {{end}}
                {{ if (gt (len .Alerts) 0) }}
                <label class="tab" id="four-tab" for="four">Alerts (<span
                        class="resource-count-alerts">{{len .Alerts}}</span>)</label>
                {{end}}
            </div>
            <div class="panels">
                {{ if (gt (len .Unmanaged) 0) }}
                <div class="panel" id="one-panel">
                    <div class="d-flex justify-space-between text--grey pa-1">
                        <span>Resource id</span>
                        <span>Resource type</span>
                    </div>
                    {{range $res := .Unmanaged}}
                    <div class="resource-item resource-item-unmanaged d-flex justify-space-between">
                        <span class="resource-item-id">{{$res.TerraformId}}</span>
                        <span class="resource-item-type">{{$res.TerraformType}}</span>
                    </div>
                    {{end}}
                </div>
                {{end}}
                {{ if (gt (len .Differences) 0) }}
                <div class="panel" id="two-panel">
                    <div class="d-flex justify-space-between text--grey pa-1">
                        <span>Resource id</span>
                        <span>Resource type</span>
                    </div>
                    {{range $diff := .Differences}}
                    <div class="resource-item resource-item-changed d-flex justify-space-between">
                        <span class="resource-item-id">{{$diff.Res.TerraformId}}</span>
                        <div>
                            {{range $change := $diff.Changelog}}
                            <div>{{ formatChange $change }}</div>
                            {{end}}
                        </div>
                        <span class="resource-item-type">{{$diff.Res.TerraformType}}</span>
                    </div>
                    {{end}}
                </div>
                {{end}}
                {{ if (gt (len .Deleted) 0) }}
                <div class="panel" id="three-panel">
                    <div class="d-flex justify-space-between text--grey pa-1">
                        <span>Resource id</span>
                        <span>Resource type</span>
                    </div>
                    {{range $res := .Deleted}}
                    <div class="resource-item resource-item-deleted d-flex justify-space-between">
                        <span class="resource-item-id">{{$res.TerraformId}}</span>
                        <span class="resource-item-type">{{$res.TerraformType}}</span>
                    </div>
                    {{end}}
                </div>
                {{end}}
                {{ if (gt (len .Alerts) 0) }}
                <div class="panel" id="four-panel">
                    {{range $type, $messages := .Alerts}}
                    {{range $el := $messages}}
                    <div class="resource-item resource-item-alerts">
                        <span class="resource-item-type">{{ $type }}</span>
                        <span>{{ $el.Message }}</span>
                    </div>
                    {{end}}
                    {{end}}
                </div>
                {{end}}
            </div>
        </div>

        <div class="empty-message-container mt-5 d-flex justify-center hide">
            <p>There's nothing to see there...</p>
        </div>
        {{else}}
        <div class="d-flex justify-center mt-5 mb-5">
            <h1>Congrats! Your infrastructure is in sync</h1>
        </div>
        {{end}}
    </div>
</div>
</body>
<script lang="js">
    const resources = document.querySelectorAll('.resource-item')

    function hideResource(res) {
        res.classList.add('hide')
    }

    function displayResource(res) {
        res.classList.remove('hide')
    }

    function resourceIdContains(res, query) {
        const el = res.querySelector('.resource-item-id')
        if (!el) {
            return false
        }
        return el.innerText.toLowerCase().includes(query.toLowerCase())
    }

    function resourceTypeEqual(res, type) {
        const el = res.querySelector('.resource-item-type')
        if (!el) {
            return false
        }
        return el.innerText === type
    }

    function refreshCounters() {
        const counterClassMapping = {
            '.resource-item-unmanaged': '.resource-count-unmanaged',
            '.resource-item-changed': '.resource-count-changed',
            '.resource-item-deleted': '.resource-count-deleted',
            '.resource-item-alerts': '.resource-count-alerts',
        }

        for (const resClass in counterClassMapping) {
            const countEl = document.querySelector(counterClassMapping[resClass])
            if (!countEl) {
                continue
            }
            countEl.textContent = Array.from(document.querySelectorAll(resClass)).filter(el => !el.classList.contains('hide')).length
        }
    }

    function computeEmptyMessage() {
        const msgEl = document.querySelector('.empty-message-container')
        const wrapperEl = document.querySelector('.tabs-wrapper')
        const count = Array.from(resources).filter(el => !el.classList.contains('hide')).length
        if (count === 0) {
            msgEl.classList.remove('hide')
            wrapperEl.classList.add('hide')
            return
        }
        msgEl.classList.add('hide')
        wrapperEl.classList.remove('hide')
    }

    function refreshState() {
        const queryFilterInput = document.querySelector('input[name=resource-id-filter]').value
        const typeFilterInput = document.querySelector('select[name=resource-type-filter]').value

        for (const res of resources) {
            const matchId = !queryFilterInput.length || resourceIdContains(res, queryFilterInput)
            const matchType = !typeFilterInput.length || resourceTypeEqual(res, typeFilterInput)

            if (matchId && matchType) {
                displayResource(res)
                continue
            }

            hideResource(res)
        }

        refreshCounters()
        computeEmptyMessage()
    }

    function resetFilters() {
        document.querySelector('input[name=resource-id-filter]').value = ""
        document.querySelector('select[name=resource-type-filter]').value = ""
        refreshState()
    }

    refreshState()
</script>
</html>
